{"version":3,"sources":["images/avatar.jpg","components/List.js","components/Add.js","components/Atoms.js","components/SmallResult.js","components/Update.js","components/Result.js","components/Search.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomCard","className","this","props","data","map","obj","style","borderStyle","borderColor","borderWidth","borderRadius","padding","width","src","image","height","textAlign","alt","Object","entries","key","val","React","Component","Add","onSubmit","e","FormData","target","firstName","get","lastName","dateOfBirth","privatePhone","workPhone","email","address","driver","uuid","fetch","method","mode","headers","body","JSON","stringify","then","response","console","log","json","htmlFor","type","id","name","searchState","atom","default","SmallResult","results","useRecoilValue","length","Update","useRecoilState","setSearch","a","preventDefault","first_name","last_name","url","r","catch","result","document","querySelector","reset","Result","Search","getDriver","message","to","sound","title","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","state","drivers","listDrivers","setState","toggleHidden","addDrivers","updateDrivers","searchDrivers","active","classList","add","remove","el","getElementsByClassName","messaging","Notification","permission","getToken","vapidKey","token","requestPermission","onMessage","payload","Container","fluid","Row","Col","Button","variant","size","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6f84062b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.7083676a.jpg\";","import React from 'react'\nimport image from '../images/avatar.jpg'\n\n\nexport default class CustomCard extends React.Component {\n\n    render() {\n        return(\n            <div className = 'list hidden'>\n                {(this.props.data).map(obj => {\n                    return(\n                        <div style = {{borderStyle: 'solid', borderColor: 'grey', borderWidth: 1, borderRadius: '2vw', padding: '2vh', width: '15vw'}}>\n                        <img src = {image} style = {{width: 100, height: 100, textAlign: 'center'}} alt = 'bunny'/>\n                        {Object.entries(obj).map(([key, val]) => \n                            <p key={key} style = {{textAlign: 'left'}}>{key} : {val}</p>\n                        )}\n                    </div>\n                    )  \n                })}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {uuid} from 'uuidv4'\n\nfunction Add(){\n\n    function handleSubmit(e) {\n        const data = new FormData(e.target)\n        const firstName = data.get('firstName')\n        const lastName = data.get('lastName')\n        const dateOfBirth = data.get('dateOfBirth')\n        const privatePhone = data.get('privatePhone')\n        const workPhone = data.get('workPhone')\n        const email = data.get('email')\n        const address = data.get('address')\n        const id = uuid()\n        const driver = {\n            \"first_name\": firstName,\n            \"last_name\": lastName,\n            \"date_of_birth\": dateOfBirth,\n            \"driver_id\": id,\n            \"private_phone\": privatePhone,\n            \"work_phone\": workPhone,\n            \"email_address\": email,\n            \"address\": address\n        }\n        //fetch('api/drivers', {\n        fetch('https://waste-management-admin.herokuapp.com/drivers', {\n            method: 'POST',\n            mode: 'no-cors',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(driver)\n            })\n            .then(response => console.log(response.json()))\n    }\n\n    return(\n        <form className = 'add hidden' onSubmit = {handleSubmit}>\n            <label htmlFor = 'firstName'>First name:</label>\n            <input type = 'text' id = 'firstName' name = 'firstName'></input>\n            <label htmlFor = 'lastName'>Last name:</label>\n            <input type = 'text' id = 'lastName' name = 'lastName'></input>\n            <label htmlFor = 'dateOfBirth'>Date of birth:</label>\n            <input type = 'date' id = 'dateOfBirth' name = 'dateOfBirth'></input>\n            <label htmlFor = 'privatePhone'>Phone number(private):</label>\n            <input type = 'tel' id = 'privatePhone' name = 'privatePhone'></input>\n            <label htmlFor = 'workPhone'>Phone number(work):</label>\n            <input type = 'tel' id = 'workPhone' name = 'workPhone'></input>\n            <label htmlFor = 'email'>E-mail:</label>\n            <input type = 'email' id = 'email' name = 'email'></input>\n            <label htmlFor = 'address'>Address:</label>\n            <input type = 'text' id = 'address' name = 'address'></input>\n            <button type=\"submit\" className=\"btn btn-outline-info\">Add driver</button>\n        </form>\n    )\n}\n\nexport default Add","import {atom} from 'recoil'\n\nexport const searchState = atom({\n    key: 'searchState',\n    default: []\n  })","import React from 'react'\nimport {useRecoilValue} from 'recoil'\nimport {searchState} from './Atoms.js'\n\nfunction SmallResult () {\n    let results = useRecoilValue(searchState)\n    \n    if(results.length > 0) {\n        return (\n            <div>\n                {(results).map(obj => {\n                    return(\n                        <div style = {{borderStyle: 'solid', borderColor: 'grey', borderWidth: 1, borderRadius: '2vw', padding: '2vh', width: '15vw'}}>\n                        <p>First name: {obj['first_name']}</p>\n                        <p>Last name: {obj['last_name']}</p>\n                        <p>Date of birth: {obj['date_of_birth']}</p>\n                    </div>\n                    )  \n                })}\n            </div>\n        ) \n    } else {\n        return null\n    }\n    \n}\n\nexport default SmallResult","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {searchState} from './Atoms.js'\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport SmallResult from './SmallResult.js'\n\nfunction Update () { \n\n    const [search, setSearch] = useRecoilState(searchState)\n    const data = useRecoilValue(searchState)\n\n    async function getDriver(e) {\n        e.preventDefault()\n        const data = new FormData(e.target)\n        const first_name = data.get('firstName')\n        const last_name = data.get('lastName')\n        //let url = `api/drivers/search/first_name/${first_name}/last_name/${last_name}`\n        let url = `https://waste-management-admin.herokuapp.com/api/drivers/search/first_name/${first_name}/last_name/${last_name}`\n        const result = await fetch(url).then(r => r.json()).catch(e => console.log(e))\n        setSearch(result)\n        document.querySelector('#searchForm').reset()\n    }\n\n   \n        return(\n            <div className = 'update hidden'>\n                <div>\n                <h3>Search driver</h3>\n                <form onSubmit = {getDriver} id = 'searchForm'>\n                    <label htmlFor = 'firstName'>First name:</label>\n                    <input type = 'text' id = 'firstName' name = 'firstName'></input>\n                    <label htmlFor = 'lastName'>Last name:</label>\n                    <input type = 'text' id = 'lastName' name = 'lastName'></input>\n                    <button type=\"submit\" className=\"btn btn-outline-info\">Search driver</button>\n                </form>\n                {data.length > 0 ? <SmallResult /> : null}\n            </div>\n                <form>\n                    <label htmlFor = 'firstName'>First name:</label>\n                    <input type = 'text' id = 'firstName' name = 'firstName'></input>\n                    <label htmlFor = 'lastName'>Last name:</label>\n                    <input type = 'text' id = 'lastName' name = 'lastName'></input>\n                    <label htmlFor = 'dateOfBirth'>Date of birth:</label>\n                    <input type = 'date' id = 'dateOfBirth' name = 'dateOfBirth'></input>\n                    <label htmlFor = 'privatePhone'>Phone number(private):</label>\n                    <input type = 'tel' id = 'privatePhone' name = 'privatePhone'></input>\n                    <label htmlFor = 'workPhone'>Phone number(work):</label>\n                    <input type = 'tel' id = 'workPhone' name = 'workPhone'></input>\n                    <label htmlFor = 'email'>E-mail:</label>\n                    <input type = 'email' id = 'email' name = 'email'></input>\n                    <label htmlFor = 'address'>Address:</label>\n                    <input type = 'text' id = 'address' name = 'address'></input>\n                    <button type=\"submit\" className=\"btn btn-outline-info\">Update driver</button>\n                </form>\n            </div>\n        )\n}\n\nexport default Update","import React from 'react'\nimport {useRecoilValue} from 'recoil'\nimport {searchState} from './Atoms.js'\n\nfunction Result () {\n    let results = useRecoilValue(searchState)\n    \n    if(results.length > 0) {\n        return (\n            <div>\n                {(results).map(obj => {\n                    return(\n                        <div style = {{borderStyle: 'solid', borderColor: 'grey', borderWidth: 1, borderRadius: '2vw', padding: '2vh', width: '15vw'}}>\n                        {Object.entries(obj).map(([key, val]) => \n                            <p key={key} style = {{textAlign: 'left'}}>{key} : {val}</p>\n                        )}\n                    </div>\n                    )  \n                })}\n            </div>\n        ) \n    } else {\n        return null\n    }\n    \n}\n\nexport default Result","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Result from './Result.js'\nimport {searchState} from './Atoms.js'\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\n\nfunction Search () { \n    const [search, setSearch] = useRecoilState(searchState)\n\n    const getDriver = async (e) => {\n        e.preventDefault()\n        const data = new FormData(e.target)\n        const first_name = data.get('firstName')\n        const last_name = data.get('lastName')\n        let url = `api/drivers/search/first_name/${first_name}/last_name/${last_name}`\n        const result = await fetch(url).then(r => r.json()).catch(e => console.log(e))\n        console.log(result)\n        setSearch(result)\n        document.querySelector('#searchForm').reset()\n        }\n\n    const urlBase64ToUint8Array = (base64String) => {\n            const padding = '='.repeat((4 - base64String.length % 4) % 4);\n            const base64 = (base64String + padding)\n              .replace(/-/g, '+')\n              .replace(/_/g, '/');\n           \n            const rawData = window.atob(base64);\n            const outputArray = new Uint8Array(rawData.length);\n           \n            for (let i = 0; i < rawData.length; ++i) {\n              outputArray[i] = rawData.charCodeAt(i);\n            }\n            return outputArray;\n    }\n\n    const sendSubscription = (subscription) => {\n        return (\n            fetch('http://localhost:3000/api/notifications', {\n                method: \"POST\",\n                body: JSON.stringify(subscription),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n        )\n    }\n\n    const subscribeUser = () => {\n        const convertedVapidKey = urlBase64ToUint8Array('BAO-gzZEaIpZGRPDXSs8Cwa15U77Irdh7V8zuFPPqk7eso042a7WZCNGjK19iNeq6eY7gCgMLazzMC3rYEj8Mfc')\n        if('serviceWorker' in navigator) {\n            navigator.serviceWorker.ready.then((registration) => {\n                if(!registration.pushManager){\n                    console.log('Push manager unavailable.')\n                    return\n                }\n                registration.pushManager.getSubscription().then((existedSubscription) => {\n                    if(existedSubscription === null) {\n                        console.log('No subscription detected, make a request.')\n                        registration.pushManager.subscribe({\n                            applicationServerKey: convertedVapidKey,\n                            userVisibleOnly: true\n                        }).then((newSubscription) => {\n                            console.log('New subscription added.')\n                            sendSubscription(newSubscription)\n                        }).catch(e => {\n                            if(Notification.permission !== 'granted'){\n                                console.log('Permission was not granted.')\n                            } else {\n                                console.error('An error ocurred during the subscription process.', e)\n                            }\n                        })\n                    } else {\n                        console.log('Existed subscription detected.')\n                        sendSubscription(existedSubscription)\n                    }\n                })\n            }).catch(e => console.error('An error ocurred during Service Worker registration.', e))\n        } \n    }\n\n    const message = async() => {\n        const message = {\n            to: \"ExponentPushToken[i9Yi9pJpzCwwxzq3rXi_LJ]\",\n            sound: 'default',\n            title: 'Original Title',\n            body: 'And here is the body!'\n          };\n        \n          await fetch('https://exp.host/--/api/v2/push/send', {\n            method: 'POST',\n            mode: 'no-cors',\n            headers: {\n              'Accept': 'application/json',\n              'Accept-encoding': 'gzip, deflate',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(message),\n          })\n\n        // const timestamp = new Date().toLocaleString()\n        // const message = {\n        //     'message': e.target.innerHTML,\n        //     'user_id': 18,\n        //     'timestamp': timestamp\n        // }\n        // fetch('api/notifications', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //     },\n        //     body: JSON.stringify(message)\n        // })\n        // .then(response => console.log(response.json()))\n        //subscribeUser()\n    }\n        \n        return(\n            <div className = 'search hidden'>\n                <button onClick = {message}>Message</button>\n                <h3>Search driver</h3>\n                <form onSubmit = {getDriver} id = 'searchForm'>\n                    <label htmlFor = 'firstName'>First name:</label>\n                    <input type = 'text' id = 'firstName' name = 'firstName'></input>\n                    <label htmlFor = 'lastName'>Last name:</label>\n                    <input type = 'text' id = 'lastName' name = 'lastName'></input>\n                    <button type=\"submit\" className=\"btn btn-outline-info\">Search driver</button>\n                </form>\n                <Result />\n            </div>\n        )\n    }\n\nexport default Search","import firebase from 'firebase'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDBgs0opwmRJRCl6-MsQ2b-5Jt8QgJQkTw\",\n  authDomain: \"web-database-600a9.firebaseapp.com\",\n  projectId: \"web-database-600a9\",\n  storageBucket: \"web-database-600a9.appspot.com\",\n  messagingSenderId: \"773209156761\",\n  appId: \"1:773209156761:web:070955b95162990f1b9c08\",\n  measurementId: \"G-3BHTRRBRK1\"\n})\n\nexport default firebase","import React from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport CustomCard from './components/List.js'\nimport Add from './components/Add.js'\nimport Update from './components/Update.js'\nimport Search from './components/Search'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { RecoilRoot } from 'recoil'\nimport firebase from './firebase.js'\n\n\nclass App extends React.Component {\n  state = {\n    drivers: [],\n  }\n\n  componentDidMount() {\n    const messaging = firebase.messaging()\n    if(Notification.permission === 'granted') {\n      const notification = new Notification('Granted.')\n      messaging.getToken({vapidKey: 'BB7vLC4_uuRgV74i-GqvZCb51eu1Wdwa_b4ewDhBLgKWboy9QG4HLYYeceDvzl81SS-IHcjj7xKYnsb9E8MVNl0'})\n      .then(function(token){\n        console.log('Token: ' + token)\n      })\n    } else if (Notification.permission !== 'denied') {\n      Notification.requestPermission().then(function(permission){\n        if(permission === 'granted') {\n          const notification = new Notification('It is granted now.')\n        }\n      })\n    }\n    messaging.onMessage(function(payload){\n      console.log('onMessage: ' + payload)\n    })\n  }\n\n  listDrivers = () => {\n    //fetch('api/drivers')\n    fetch('https://waste-management-admin.herokuapp.com/drivers')\n    .then(drivers => drivers.json())\n    .then(r => {\n        this.setState({drivers: r})\n        this.toggleHidden('list')\n    })\n  }\n\n  addDrivers = () => {\n    this.toggleHidden('add')\n  }\n\n  updateDrivers = () => {\n    this.toggleHidden('update')\n  }\n\n  searchDrivers = () => {\n    this.toggleHidden('search')\n  }\n\n  toggleHidden = (type) => {\n    let active = document.querySelector('.active')\n    if(active !== null) {\n      active.classList.add('hidden')\n      active.classList.remove('active')\n    }\n    let el = document.getElementsByClassName(`${type}`)[0]\n    el.classList.remove('hidden')\n    el.classList.add('active')\n  }\n\n  render(){\n    return (\n      <RecoilRoot>\n        <Container fluid className = 'App'>\n        <Row >\n          <Col className = 'row-header'>\n            <h3>Hulladékkezelő admin</h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col className = 'col-drivers-action-tab'>\n            <p className = 'drivers-label'>DRIVERS admin</p>\n            <Row>\n              <Col className = 'drivers-admin-btns'>\n                <Button variant = 'light' size = 'large' onClick = {this.listDrivers}>list</Button>\n                <Button variant = 'light' size = 'large'  onClick = {this.searchDrivers}>search</Button>\n                <Button variant = 'light' size = 'large' onClick = {this.addDrivers}>create</Button>\n                <Button variant = 'light' size = 'large' onClick = {this.updateDrivers}>update</Button>\n                <Button variant = 'light' size = 'large'>delete</Button>\n                <Button variant = 'light' size = 'large'>list address</Button>\n                <Button variant = 'light' size = 'large'>generate route</Button>\n              </Col>\n              <Col></Col>\n            </Row>\n          </Col>\n          <Col className = 'col-drivers-data-tab'>\n              <CustomCard data = {this.state.drivers} />\n              <Add />\n              <Search />\n              <Update />\n          </Col>\n        </Row>\n      </Container>\n      </RecoilRoot>\n      \n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swFileName = process.env.NODE_ENV === 'production' \n      ? 'service-worker.js' \n      : 'firebase-messaging-sw.js'\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\n      \n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}